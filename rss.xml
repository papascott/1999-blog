<?xml version="1.0"?>
<!-- RSS generated by 1999.io on Tue, 13 Sep 2016 09:51:41 GMT -->
<rss version="2.0" xmlns:source="http://source.smallpict.com/2014/07/12/theSourceNamespace.html" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:IA="http://rss2.io/ia/">
	<channel>
		<title>papascott's chatlog</title>
		<link>http://test-blog.papascott.de/</link>
		<description></description>
		<pubDate>Tue, 13 Sep 2016 08:42:15 GMT</pubDate>
		<lastBuildDate>Tue, 13 Sep 2016 09:51:41 GMT</lastBuildDate>
		<language>en-us</language>
		<generator>1999.io</generator>
		<docs>http://cyber.law.harvard.edu/rss/rss.html</docs>
		<cloud domain="rpc.rsscloud.io" port="5337" path="/pleaseNotify" registerProcedure="" protocol="http-post" />
		<item>
			<title>Copy 1999.io files to GitHub 1</title>
			<description>&lt;p&gt;If you have no idea why you'd want a repository at GitHub, you can ignore this post :-)&lt;/p&gt;&lt;p&gt;However, if you think you'd like to keep a copy of your site at GitHub, automatically pushing all updates, or even serving your site from there, you need to do a little bit of setup first.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;On your server, clone your new repository. If your GitHub name is papascott and your new repository is named testing-rhino, the command is &quot;git clone&amp;nbsp;git@github.com:papascott/testing-rhino.git&quot;.&lt;/li&gt;&lt;li&gt;Next we need to create a SSH key so the server can push changes to GitHub without asking for a password. It's best to create a new key without a passphrase that is not used for anything else.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;ssh-keygen -t rsa -C &quot;my GitHub key&quot;&lt;br&gt;Enter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]&lt;br&gt;Enter passphrase (empty for no passphrase): [Press enter]&lt;br&gt;Enter same passphrase again: [Press enter]&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;This will also create a public key as&amp;nbsp;/Users/you/.ssh/id_rsa.pub. It will look something like this&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCt1Gad2wfIONTmXndX77&lt;br&gt;4Uwp8vU62Qr4p0VEzM29W6W7h4rx3vch7DsUk53jajxY4Eimrsybkxaka5v&lt;br&gt;KaasuV1cYN8nDbdRlaXjoefXNRi+JjEBv8i4zGhCmxKZpF1eWee2Up1Nyitsgl5&lt;br&gt;YOhEO2R0vO3uR1BMAgjefqazopXxVYFMut/ITTTvnK+alR4ngXQTAfTXcixZUg9ivXrMLwjSPQ+L3Py9/&lt;br&gt;Ql6RORdV0NH6uHqIWAdoHjfOerHek9+jo8DAXuSuf7IGK3qCp1pXXzpeahk0/QIwkNVph7tMI&lt;br&gt;LHa8rP7XKQpI2fo0JmEMi+SZ3sAc6+sz3o6Phz0yYCMro9 my GitHub key&lt;br&gt;&lt;br&gt;(I've added line breaks for clarity, but it will actually be a single line.)&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;At GitHub we need to set this key as a deploy key for this repository, under the repository Settings/Deploy keys: Add deploy key, give a title, and paste the public key. Select &quot;Allow write access&quot;, then &quot;Add key&quot;.&lt;/li&gt;&lt;li&gt;Back on the server, we can test this by attempting to ssh to git@github.com&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;ssh -T git@github.com&lt;br&gt;Hi papascott/testing-rhino! You've successfully authenticated, but GitHub does not provide shell access.&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;If you successfully authenticate, you should be good to go. In the next post I'll write the callback to actually copy the files every time we publish.&lt;/p&gt;</description>
			<content:encoded><![CDATA[
								
				<!doctype html>
				<html lang="en" prefix="op: http://media.facebook.com/op#">
					<head>
						<meta charset="utf-8">
						<meta property="op:markup_version" content="v1.0">
						<meta property="fb:article_style" content="default">
						<link rel="canonical" href="http://test-blog.papascott.de/2016/09/13/settingUpForGithub.html">
						</head>
					<body>
						<article>
							<header>
								<h1>Copy 1999.io files to GitHub 1</h1>
								<time class="op-published" datetime="2016-09-13T08:42:15.724Z"></time>
								<time class="op-modified" dateTime="2016-09-13T09:28:47.070Z"></time>
								<address><a>papascott</a></address>
								<p>If you have no idea why you'd want a repository at GitHub, you can ignore this post :-)</p><p>However, if you think you'd like to keep a copy of your site at GitHub, automatically pushing all updates, or even serving your site from there, you need to do a little bit of setup first.</p><ul><li>On your server, clone your new repository. If your GitHub name is papascott and your new repository is named testing-rhino, the command is "git clone&nbsp;git@github.com:papascott/testing-rhino.git".</li><li>Next we need to create a SSH key so the server can push changes to GitHub without asking for a password. It's best to create a new key without a passphrase that is not used for anything else.&nbsp;</li></ul><blockquote>ssh-keygen -t rsa -C "my GitHub key"<br>Enter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]<br>Enter passphrase (empty for no passphrase): [Press enter]<br>Enter same passphrase again: [Press enter]</blockquote><ul><li>This will also create a public key as&nbsp;/Users/you/.ssh/id_rsa.pub. It will look something like this</li></ul><blockquote>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCt1Gad2wfIONTmXndX77<br>4Uwp8vU62Qr4p0VEzM29W6W7h4rx3vch7DsUk53jajxY4Eimrsybkxaka5v<br>KaasuV1cYN8nDbdRlaXjoefXNRi+JjEBv8i4zGhCmxKZpF1eWee2Up1Nyitsgl5<br>YOhEO2R0vO3uR1BMAgjefqazopXxVYFMut/ITTTvnK+alR4ngXQTAfTXcixZUg9ivXrMLwjSPQ+L3Py9/<br>Ql6RORdV0NH6uHqIWAdoHjfOerHek9+jo8DAXuSuf7IGK3qCp1pXXzpeahk0/QIwkNVph7tMI<br>LHa8rP7XKQpI2fo0JmEMi+SZ3sAc6+sz3o6Phz0yYCMro9 my GitHub key<br><br>(I've added line breaks for clarity, but it will actually be a single line.)</blockquote><ul><li>At GitHub we need to set this key as a deploy key for this repository, under the repository Settings/Deploy keys: Add deploy key, give a title, and paste the public key. Select "Allow write access", then "Add key".</li><li>Back on the server, we can test this by attempting to ssh to git@github.com</li></ul><blockquote>ssh -T git@github.com<br>Hi papascott/testing-rhino! You've successfully authenticated, but GitHub does not provide shell access.</blockquote><p>If you successfully authenticate, you should be good to go. In the next post I'll write the callback to actually copy the files every time we publish.</p>
								</header>
							</article>
						</body>
					</html>

				]]></content:encoded>
			<pubDate>Tue, 13 Sep 2016 08:42:15 GMT</pubDate>
			<link>http://test-blog.papascott.de/2016/09/13/settingUpForGithub.html</link>
			<guid>http://test-blog.papascott.de/2016/09/13/settingUpForGithub.html</guid>
			<source:outline text="Copy 1999.io files to GitHub 1"  type="outline"  created="Tue, 13 Sep 2016 08:42:15 GMT" >
				<source:outline text="&lt;p&gt;If you have no idea why you'd want a repository at GitHub, you can ignore this post :-)&lt;/p&gt;&lt;p&gt;However, if you think you'd like to keep a copy of your site at GitHub, automatically pushing all updates, or even serving your site from there, you need to do a little bit of setup first.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;On your server, clone your new repository. If your GitHub name is papascott and your new repository is named testing-rhino, the command is &quot;git clone&amp;nbsp;git@github.com:papascott/testing-rhino.git&quot;.&lt;/li&gt;&lt;li&gt;Next we need to create a SSH key so the server can push changes to GitHub without asking for a password. It's best to create a new key without a passphrase that is not used for anything else.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;ssh-keygen -t rsa -C &quot;my GitHub key&quot;&lt;br&gt;Enter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]&lt;br&gt;Enter passphrase (empty for no passphrase): [Press enter]&lt;br&gt;Enter same passphrase again: [Press enter]&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;This will also create a public key as&amp;nbsp;/Users/you/.ssh/id_rsa.pub. It will look something like this&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCt1Gad2wfIONTmXndX77&lt;br&gt;4Uwp8vU62Qr4p0VEzM29W6W7h4rx3vch7DsUk53jajxY4Eimrsybkxaka5v&lt;br&gt;KaasuV1cYN8nDbdRlaXjoefXNRi+JjEBv8i4zGhCmxKZpF1eWee2Up1Nyitsgl5&lt;br&gt;YOhEO2R0vO3uR1BMAgjefqazopXxVYFMut/ITTTvnK+alR4ngXQTAfTXcixZUg9ivXrMLwjSPQ+L3Py9/&lt;br&gt;Ql6RORdV0NH6uHqIWAdoHjfOerHek9+jo8DAXuSuf7IGK3qCp1pXXzpeahk0/QIwkNVph7tMI&lt;br&gt;LHa8rP7XKQpI2fo0JmEMi+SZ3sAc6+sz3o6Phz0yYCMro9 my GitHub key&lt;br&gt;&lt;br&gt;(I've added line breaks for clarity, but it will actually be a single line.)&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;At GitHub we need to set this key as a deploy key for this repository, under the repository Settings/Deploy keys: Add deploy key, give a title, and paste the public key. Select &quot;Allow write access&quot;, then &quot;Add key&quot;.&lt;/li&gt;&lt;li&gt;Back on the server, we can test this by attempting to ssh to git@github.com&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;ssh -T git@github.com&lt;br&gt;Hi papascott/testing-rhino! You've successfully authenticated, but GitHub does not provide shell access.&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;If you successfully authenticate, you should be good to go. In the next post I'll write the callback to actually copy the files every time we publish.&lt;/p&gt;"  created="Tue, 13 Sep 2016 08:42:15 GMT" />
				</source:outline>
			</item>
		<item>
			<title>Resetting 1999</title>
			<description>&lt;p&gt;After a couple months hiatus, I'm getting back into 1999.io. Before I was using the domain &lt;span data-auto-link=&quot;true&quot; data-href=&quot;http://1999.papascott.de&quot;&gt;1999.papascott.de&lt;/span&gt;&amp;nbsp;to stage articles for my main blog. But now I've decided to start over and keep 1999 as a separate blog.&amp;nbsp;&lt;/p&gt;Resetting (clearing the home page and reverting the menus and templates) was pretty easy. Under publicFiles/users/papascott:&amp;nbsp;&lt;div&gt;&lt;ul&gt;&lt;li&gt;delete chatLog.json&lt;/li&gt;&lt;li&gt;delete the folder misc and everything in it&lt;/li&gt;&lt;li&gt;restart the server&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now I've got a clean slate to post little tech notes like this one. :-) The previous pages are still there just in case anyone is linking to them.&lt;/p&gt;&lt;/div&gt;</description>
			<content:encoded><![CDATA[
								
				<!doctype html>
				<html lang="en" prefix="op: http://media.facebook.com/op#">
					<head>
						<meta charset="utf-8">
						<meta property="op:markup_version" content="v1.0">
						<meta property="fb:article_style" content="default">
						<link rel="canonical" href="http://test-blog.papascott.de/2016/09/12/reset.html">
						</head>
					<body>
						<article>
							<header>
								<h1>Resetting 1999</h1>
								<time class="op-published" datetime="2016-09-12T07:11:54.778Z"></time>
								<time class="op-modified" dateTime="2016-09-13T08:14:23.524Z"></time>
								<address><a>papascott</a></address>
								<p>After a couple months hiatus, I'm getting back into 1999.io. Before I was using the domain <span data-auto-link="true" data-href="http://1999.papascott.de">1999.papascott.de</span>&nbsp;to stage articles for my main blog. But now I've decided to start over and keep 1999 as a separate blog.&nbsp;</p>Resetting (clearing the home page and reverting the menus and templates) was pretty easy. Under publicFiles/users/papascott:&nbsp;<div><ul><li>delete chatLog.json</li><li>delete the folder misc and everything in it</li><li>restart the server</li></ul><p>Now I've got a clean slate to post little tech notes like this one. :-) The previous pages are still there just in case anyone is linking to them.</p></div>
								</header>
							</article>
						</body>
					</html>

				]]></content:encoded>
			<pubDate>Mon, 12 Sep 2016 07:11:54 GMT</pubDate>
			<link>http://test-blog.papascott.de/2016/09/12/reset.html</link>
			<guid>http://test-blog.papascott.de/2016/09/12/reset.html</guid>
			<source:outline text="Resetting 1999"  type="outline"  created="Mon, 12 Sep 2016 07:11:54 GMT" >
				<source:outline text="&lt;p&gt;After a couple months hiatus, I'm getting back into 1999.io. Before I was using the domain &lt;span data-auto-link=&quot;true&quot; data-href=&quot;http://1999.papascott.de&quot;&gt;1999.papascott.de&lt;/span&gt;&amp;nbsp;to stage articles for my main blog. But now I've decided to start over and keep 1999 as a separate blog.&amp;nbsp;&lt;/p&gt;Resetting (clearing the home page and reverting the menus and templates) was pretty easy. Under publicFiles/users/papascott:&amp;nbsp;&lt;div&gt;&lt;ul&gt;&lt;li&gt;delete chatLog.json&lt;/li&gt;&lt;li&gt;delete the folder misc and everything in it&lt;/li&gt;&lt;li&gt;restart the server&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now I've got a clean slate to post little tech notes like this one. :-) The previous pages are still there just in case anyone is linking to them.&lt;/p&gt;&lt;/div&gt;"  created="Mon, 12 Sep 2016 07:11:54 GMT" />
				</source:outline>
			</item>
		</channel>
	</rss>
